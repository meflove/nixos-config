[general]
default_module = "gg" # The module to run when no prefix is matched
empty_module = "app"  # run with an empty prompt
exec_cmd = "sh -c"    # The exec command of your shell, default to sh
# for example: "bach -c" for bash; "zsh -c" for zsh. This can also runs wm exec commands, like hyprctl dispatch exec
vi_mode = false                      # set true to use vi keybinds, false to use emacs keybinds; default to emacs
esc_to_abort = true                  # allow to quit with esc keypress; a useful option for vi users
cheatsheet_entry = "?"               # when entered, otter-launcher will show a list of configured modules
cheatsheet_viewer = "less -R; clear" # the program that otter-launcher will pipe cheatsheet into
clear_screen_after_execution = false # useful when chafa image flash back after module execution
loop_mode = false                    # in loop mode, otter-launcher won't quit after running a module, useful when using scratchpad
external_editor = ""                 # if set, pressing ctrl+e (or pressing v in vi normal mode) will edit the input field in the specified program; default to no external editor
#callback = "" # if set, otter-launcher will run the command after a module is executed; for example, it can call swaymsg to adjust window size


# ASCII color codes are allowed with these options. However, \x1b should be replaced with \u001B (unicode escape) because the rust toml crate cannot read \x as an escaped character...
[interface]
header_cmd = "fastfetch --structure break:colors:break:os:wm:shell:kernel:term:uptime:datetime:break --key-type icon --logo-type data --logo \"$(krabby name pikachu --no-title)\""
header = "  \u001B[34mî¼Š \u001B[0m otter-launcher \u001B[34m>\u001B[0m "
header_cmd_trimmed_lines = 1
list_prefix = "     "
selection_prefix = "   \u001B[31;1m> "
place_holder = "type and search"
suggestion_mode = "list"
suggestion_lines = 5
prefix_padding = 3
prefix_color = "\u001B[33m"
description_color = "\u001B[38m"
place_holder_color = "\u001B[90m"
hint_color = "\u001B[90m"


# Modules are defined as followed
[[modules]]
description = "search with google"
prefix = "gg"
# try wm's exec command if 'setsid -f' does not work, eg. 'hyprctl dispatch exec'
cmd = "hyprctl dispatch exec xdg-open 'https://www.google.com/search?q={}'"
with_argument = true                                                        # If "with_argument" is true, the {} in the cmd value will be replaced with user input. If the field is not explicitly set, will be taken as false.
url_encode = true                                                           # "url_encode" should be true if the module is set to call webpages, as this ensures special characters in url being readable to browsers. It'd better be false with shell scripts. If the field is not explicitly set, will be taken as false.

[[modules]]
description = "launch desktop applications with fzf"
prefix = "app"
cmd = """
desktop_file() {
    find /usr/share/applications -name "*.desktop" 2>/dev/null
    find /usr/local/share/applications -name "*.desktop" 2>/dev/null
    find "$HOME/.local/share/applications" -name "*.desktop" 2>/dev/null
    find /var/lib/flatpak/exports/share/applications -name "*.desktop" 2>/dev/null
    find "$HOME/.local/share/flatpak/exports/share/applications" -name "*.desktop" 2>/dev/null
    find /run/current-system/sw/share/applications -name "*.desktop" 2>/dev/null
    find "$HOME/.nix-profile/share/applications/" -name "*.desktop" 2>/dev/null
}

temp_file=$(mktemp)

desktop_file | while IFS= read -r path; do
    app_name=$(grep -E "^Name=" "$path" | head -n 1 | cut -d "=" -f 2)
    if [ -n "$app_name" ]; then
        echo "$app_name:$path" >> "$temp_file"
    fi
done

selected_line="$(cat "$temp_file" | fzf --reverse --padding 1,3 --prompt 'Launch Apps: ' --with-nth 1 --delimiter :)"

rm "$temp_file"

[ -z "$selected_line" ] && exit

selected_path=$(echo "$selected_line" | cut -d ":" -f 2-)

hyprctl dispatch exec gtk-launch "$(basename "$selected_path")"
"""

# [[modules]]
# description = "search github"
# prefix = "gh"
# cmd = "hyprctl dispatch exec xdg-open https://github.com/search?q='{}'"
#
# with_argument = true
# url_encode = true


[[modules]]
description = "launch program in a new terminal"
prefix = "sh"
cmd = "hyprctl dispatch exec 'ghostty -e {}'"

with_argument = true


[[modules]]
description = "power menu"
prefix = "po"
cmd = """
function launch_prog {
    if [[ -n $1 ]]; then
        case $1 in
            "logout")
	      session=`loginctl session-status | head -n 1 | awk '{print $1}'`
	      loginctl terminate-session $(loginctl session-status | head -n 1 | awk '{print $1}')
              ;;
            "suspend")
              systemctl suspend
              ;;
            "hibernate")
              systemctl hibernate
              ;;
            "reboot")
	      systemctl reboot
              ;;
            "shutdown")
              systemctl poweroff
              ;;
        esac
    else echo 'exit without input...'
    fi
}

launch_prog $(echo -e 'reboot\nshutdown\nlogout\nsuspend\nhibernate' | fzf --reverse --print-query --no-scrollbar --padding 1,3 --color=gutter:-1 --bind 'ctrl-t:execute-silent( setsid st -z 14 -e {q} & exit & )+abort' --prompt 'Power Menu: ' | tail -1)
"""
